{"version":3,"file":"static/js/965.909ca93b.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/PhoneForm/PhoneForm.styled.js","components/PhoneForm/PhoneForm.jsx","components/Filter/Filter.jsx","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.jsx","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectorContacts = state => state.contacts.contacts.items;\n\nexport const selectorfilter = state => state.contacts.filter;\n\nexport const selectorContactsFilter = createSelector(\n  [selectorContacts, selectorfilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\nexport const selectorContactsIsLoading = state =>\n  state.contacts.contacts.isLoading;\n\nexport const selectorContactsError = state => state.contacts.contacts.error;\n","import styled from 'styled-components';\n\nexport const StyledPhoneForm = styled.div`\n  .text {\n    text-align: center;\n    font-size: 36px;\n    text-decoration: underline;\n    text-decoration-style: double;\n  }\n\n  .form {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .label {\n    width: 400px;\n  }\n\n  .title {\n    display: block;\n    margin-bottom: 10px;\n    font-size: 18px;\n    line-height: 1.17;\n    letter-spacing: 0.04em;\n  }\n\n  .input {\n    padding: 0 10px;\n    margin-bottom: 15px;\n    width: 100%;\n    height: 35px;\n    font-size: 16px;\n    border: 1px solid rgba(46, 47, 66, 0.4);\n    border-radius: 4px;\n  }\n\n  .btn {\n    display: block;\n    margin: auto;\n    min-width: 110px;\n    height: 40px;\n    padding: 5px 20px;\n    border: 1px solid grey;\n    border-radius: 4px;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 1.5;\n    letter-spacing: 0.04em;\n    cursor: pointer;\n    background-color: white;\n    color: black;\n\n    &:hover,\n    &:focus {\n      background-color: rgb(21, 184, 21);\n      color: white;\n    }\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectorContacts } from 'redux/contacts/selectors';\n\nimport { StyledPhoneForm } from './PhoneForm.styled';\n\nconst PhoneForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectorContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const name = event.currentTarget.elements.name.value;\n    const number = event.currentTarget.elements.number.value;\n\n    const isNameExist = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (isNameExist) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n\n    const newContact = {\n      name,\n      number,\n    };\n\n    dispatch(addContact(newContact));\n    event.currentTarget.reset();\n  };\n\n  return (\n    <StyledPhoneForm>\n      <h1 className=\"text\">Phonebook</h1>\n      <form onSubmit={handleSubmit} className=\"form\">\n        <label className=\"label\">\n          <span className=\"title\">Name</span>\n          <input\n            className=\"input\"\n            name=\"name\"\n            type=\"text\"\n            required\n            placeholder=\"Enter name\"\n          />\n          <span className=\"title\">Number</span>\n          <input\n            className=\"input\"\n            type=\"tel\"\n            name=\"number\"\n            required\n            placeholder=\"Number\"\n            minLength=\"7\"\n            maxLength=\"12\"\n          />\n        </label>\n        <button className=\"btn\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </StyledPhoneForm>\n  );\n};\n\nexport default PhoneForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectorfilter } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/sliceContacts';\n\nconst Filter = () => {\n  const filter = useSelector(selectorfilter);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = ({ target: { value } }) => {\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <form>\n        <input\n          type=\"text\"\n          placeholder=\"Search contacts\"\n          value={filter}\n          onChange={handleFilterChange}\n          style={{\n            padding: '5px',\n            fontSize: '16px',\n            border: '1px solid #ccc',\n            borderRadius: '4px',\n            width: '300px',\n          }}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const StyledContacts = styled.div`\n  .item {\n    margin-bottom: 15px;\n  }\n\n  .button {\n    min-width: 50px;\n    margin-left: 10px;\n\n    border: 1px solid grey;\n    border-radius: 4px;\n    padding: 4px;\n    font-weight: 500;\n    font-size: 16px;\n\n    background-color: white;\n    color: black;\n  }\n\n  .button:hover,\n  .button:focus {\n    background-color: red;\n    color: white;\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectorContactsError,\n  selectorContactsFilter,\n  selectorContactsIsLoading,\n} from 'redux/contacts/selectors';\nimport Loader from 'components/Loader/Loader';\n\nimport { StyledContacts } from './Contacts.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectorContactsIsLoading);\n  const error = useSelector(selectorContactsError);\n  const filteredContacts = useSelector(selectorContactsFilter);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <StyledContacts>\n      <ul>\n        {filteredContacts.length > 0 ? (\n          filteredContacts.map(contact => (\n            <li key={contact.id} className=\"item\">\n              {contact.name}: {contact.phone}\n              <button\n                className=\"button\"\n                onClick={() => handleDeleteContact(contact.id)}\n              >\n                Delete\n              </button>\n            </li>\n          ))\n        ) : (\n          <p>No contacts found</p>\n        )}\n      </ul>\n\n      {isLoading && <Loader />}\n      {error && <p>Oppsss Erorr</p>}\n    </StyledContacts>\n  );\n};\n\nexport default Contacts;\n","import styled from 'styled-components';\n\nexport const StyledContainer = styled.div`\n  padding: 20px;\n\n  margin-left: auto;\n  margin-right: auto;\n\n  background-color: rgb(213 220 244);\n\n  .appstyled {\n    display: flex;\n    align-items: center;\n    justify-items: center;\n    flex-direction: column;\n    width: 800px;\n    padding-top: 15px;\n\n    margin: 0 auto;\n  }\n\n  .text {\n    text-align: center;\n    font-size: 36px;\n    text-decoration: underline;\n    text-decoration-style: double;\n  }\n`;\n","import PhoneForm from 'components/PhoneForm/PhoneForm';\nimport Filter from 'components/Filter/Filter';\nimport Contacts from 'components/Contacts/Contacts';\n\nimport { StyledContainer } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  return (\n    <StyledContainer>\n      <div className=\"appstyled\">\n        <PhoneForm />\n        <h2 className=\"text\">Contacts</h2>\n        <Filter />\n        <Contacts />\n      </div>\n    </StyledContainer>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectorContacts","state","contacts","items","selectorfilter","filter","selectorContactsFilter","createSelector","contact","name","toLowerCase","includes","selectorContactsIsLoading","isLoading","selectorContactsError","error","StyledPhoneForm","styled","_templateObject","_taggedTemplateLiteral","dispatch","useDispatch","useSelector","_jsxs","children","_jsx","className","onSubmit","event","preventDefault","currentTarget","elements","value","number","some","alert","concat","newContact","addContact","reset","type","required","placeholder","minLength","maxLength","onChange","_ref","target","setFilter","style","padding","fontSize","border","borderRadius","width","StyledContacts","filteredContacts","useEffect","fetchContacts","length","map","phone","onClick","contactId","id","deleteContact","Loader","StyledContainer","PhoneForm","Filter","Contacts"],"sourceRoot":""}